#!/bin/bash
#
# ------------------------
# Post installation script
# ------------------------

ask() {
    # Function to ask questions
    #
    # source: https://gist.github.com/davejamesmiller/1965569
    local prompt default reply

    if [[ ${2:-} = 'Y' ]]; then
        prompt='Y/n'
        default='Y'
    elif [[ ${2:-} = 'N' ]]; then
        prompt='y/N'
        default='N'
    else
        prompt='y/n'
        default=''
    fi

    while true; do
        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "
        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read -r reply </dev/tty
        # Default?
        if [[ -z $reply ]]; then
            reply=$default
        fi
        # Check if the reply is valid
        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}



clear
echo "

 ▄▄▄·      .▄▄ · ▄▄▄▄▄    ▪   ▐ ▄ .▄▄ · ▄▄▄▄▄ ▄▄▄· ▄▄▌  ▄▄▌      .▄▄ ·  ▄▄· ▄▄▄  ▪   ▄▄▄·▄▄▄▄▄
▐█ ▄█▪     ▐█ ▀. •██      ██ •█▌▐█▐█ ▀. •██  ▐█ ▀█ ██•  ██•      ▐█ ▀. ▐█ ▌▪▀▄ █·██ ▐█ ▄█•██
 ██▀· ▄█▀▄ ▄▀▀▀█▄ ▐█.▪    ▐█·▐█▐▐▌▄▀▀▀█▄ ▐█.▪▄█▀▀█ ██▪  ██▪      ▄▀▀▀█▄██ ▄▄▐▀▀▄ ▐█· ██▀· ▐█.▪
▐█▪·•▐█▌.▐▌▐█▄▪▐█ ▐█▌·    ▐█▌██▐█▌▐█▄▪▐█ ▐█▌·▐█ ▪▐▌▐█▌▐▌▐█▌▐▌    ▐█▄▪▐█▐███▌▐█•█▌▐█▌▐█▪·• ▐█▌·
.▀    ▀█▄▀▪ ▀▀▀▀  ▀▀▀     ▀▀▀▀▀ █▪ ▀▀▀▀  ▀▀▀  ▀  ▀ .▀▀▀ .▀▀▀      ▀▀▀▀ ·▀▀▀ .▀  ▀▀▀▀.▀    ▀▀▀

"

# Define dotfiels dirs that won't be copied but linked (stow) instead
STOW_DIRS="nvim"

# Copy dotfiles
echo
if ask ":: Copy the dotfiles to your home folder?" Y; then
    echo "Copying dotfiles [...]"
    # Copy every dotfile in your home directory
    # (except dirs that start with an underscore or dirs that are listed in
    # STOW_DIRS)
    for directory in [^_]*/; do
        if ! echo "$STOW_DIRS" | grep -qw "${directory%/}"; then
            cp -r "${directory%/}"/. ~;
        fi
    done
    for directory in "$STOW_DIRS"; do
        stow "${directory%/}"
    done
else
    echo "Skipping..."
fi

echo
if ask ":: Change shell to zsh?" Y; then
    chsh -s /usr/bin/zsh
else
    echo "Skipping..."
fi

echo
if ask ":: Configure keyboard to 'us altgr-intl caps:escape'?" Y; then
    echo "Configuring keyboard [...]"
    localectl set-x11-keymap us "" altgr-intl caps:escape
else
    echo "Skipping..."
fi

echo
if ask ":: Install Neovim plugins?" Y; then
    nvim -c "PackerSync"
else
    echo "Skipping..."
fi

echo
if ask ":: Download and install mambaforge?" Y; then
    echo "Downloading mambaforge [...]"
    echo "  ** Remember to install in ~/.mambaforge **"
    curl -L -O https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh
    bash Mambaforge-$(uname)-$(uname -m).sh
else
    echo "Skipping..."
fi

echo
if ask ":: Configure printing services?" Y; then
    # Source: https://wiki.manjaro.org/index.php?title=Printing
    sudo gpasswd -a $USER sys
    sudo systemctl enable --now cups.service
    sudo systemctl enable --now cups.socket
    sudo systemctl enable --now cups.path
else
    echo "Skipping..."
fi

echo
if ask ":: Configure SSD TRIM?" Y; then
    # Source: https://averagelinuxuser.com/manjaro-xfce-after-install/#10-enable-trim-for-ssd
    sudo systemctl enable fstrim.timer
    sudo systemctl start fstrim.timer
else
    echo "Skipping..."
fi

echo
if ask ":: Lower swappiness to 5?" Y; then
    sudo sysctl -w vm.swappiness=5
else
    echo "Skipping..."
fi

echo
if ask ":: Disable Bluetooth at startup" Y; then
    sudo sed -s -i 's/^#AutoEnable=true$/AutoEnable=false' /etc/bluetooth/main.conf
else
    echo "Skipping..."
fi

echo
if ask ":: Configure zsa-wally?" Y; then
    sudo cp _zsa-wally/50-zsa.rules /etc/udev/rules.d/50-zsa.rules
    sudo groupadd plugdev
    sudo usermod -aG plugdev "$USER"
    echo "Remember to logout or reboot for these changes to work."
else
    echo "Skipping..."
fi
