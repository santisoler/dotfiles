[user]
    name = Santiago Soler
    email = santisoler@fastmail.com
    signingKey = E41CAA9E5A2F51689B0E21EB394E6BD97C8F1C0D

[core]
    editor = nvim
    excludesFile = ~/.gitignore

[init]
    defaultBranch = main

[pull]
    rebase = false

[difftool.latex]
    cmd = latexdiff "$LOCAL" "$REMOTE"

[alias]
    ldiff = difftool -y -t latex

[commit]
    gpgsign = true

[tag]
    forceSignAnnotated = true

[delta]
    line-numbers = true
    side-by-side = true


# ========================================
# Use Neovim and vim-fugitive as mergetool
# ========================================
[merge]
    tool = nvim
    conflictsyle = diff3

[mergetool "nvim"]
    cmd = nvim -f -c \"Gvdiffsplit!\" \"$MERGED\"
# ----------------------------------------

[alias]
    # ATTENTION: All aliases prefixed with ! run in /bin/sh make sure you use sh syntax, not bash/zsh or whatever
    branch-recent = "! git branch $1 --sort='-committerdate' --format=' %(authordate:relative)%09%(refname:short)%09%(contents:subject)' | column -t -s $'\t' | less"
    recentb = "!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always --count=${count:-20} | while read line; do branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); ahead=$(git rev-list --count \"${refbranch:-origin/master}..${branch}\"); behind=$(git rev-list --count \"${branch}..${refbranch:-origin/master}\"); colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); echo \"$ahead|$behind|$colorline\" | awk -F'|' -vOFS='|' '{$5=substr($5,1,70)}1' ; done | ( echo \"ahead|behind|branch|lastcommit|message|author\n\" && cat) | column -ts'|';}; r"
    # reference: https://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
    ds = "! git diff --staged"
    st = "! git status"

